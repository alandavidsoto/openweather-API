{"version":3,"sources":["componentes/buscador.js","componentes/card.js","componentes/ciudad.js","componentes/footer.js","App.js","reportWebVitals.js","index.js"],"names":["Buscador","props","propiedades","className","onSubmit","this","submit","type","onChange","input","placeholder","React","Component","Card","data","resultado","temperatura","main","temp","icon","weather","ciudad","name","pais","sys","country","tempMax","temp_max","tempMin","temp_min","humidity","pressure","sunrise","Date","sunset","fecha","dt","atributo","toLocaleString","src","toLowerCase","Math","floor","toLocaleTimeString","Ciudad","state","fetch","then","response","json","resdata","setState","Fragment","Object","keys","length","Footer","style","color","target","href","document","addEventListener","cabecera","querySelector","window","scroll_cabecera","clientHeight","scroll_window","pageYOffset","console","log","buscador","classList","add","remove","App","busqueda","geolocalizacion","ciudades","handlerInput","bind","handlerSubmit","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","e","value","preventDefault","cod","card_scroll","scrollTo","offsetTop","alert","display","justifyContent","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.544b240e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass Buscador extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.propiedades = props;\r\n    }\r\n    render() { \r\n      return (\r\n        <form className=\"formulario\" onSubmit={this.propiedades.submit}>\r\n            <input className=\"input-buscador\"type=\"text\" onChange={this.propiedades.input} placeholder=\"Busca Una Lugar Ej: buenos Aires,AR 처 Cochabamba,BO\" />\r\n            <button className=\"submit-buscador\" type=\"submit\"><i className=\"fas fa-search-location\"></i></button>\r\n        </form>\r\n      );\r\n    }\r\n}\r\nexport default Buscador","import React from 'react';\r\n\r\nfunction Card(props){\r\n    const data = props.resultado;\r\n    const temperatura = (data.main.temp)- 273.15\r\n    const icon = data.weather[0].icon\r\n    const ciudad= data.name\r\n    const pais = data.sys.country\r\n    const tempMax = (data.main.temp_max)-273.15;\r\n    const tempMin = (data.main.temp_min)-273.15;\r\n    const humidity = data.main.humidity;\r\n    const pressure = data.main.pressure;\r\n    const sunrise = new Date(data.sys.sunrise * 1000);\r\n    const sunset = new Date(data.sys.sunset * 1000);\r\n    const fecha = new Date(data.dt * 1000)\r\n  \r\n    return (\r\n      <div className={\"card \"+props.atributo}>\r\n          <div className=\"card-left\">\r\n            <span className=\"fecha-actual\">\r\n              {fecha.toLocaleString()}\r\n            </span>\r\n            <div className=\"icono-state\">\r\n              <img src={`https://openweathermap.org/img/wn/${icon}@2x.png`}></img>\r\n            </div>\r\n            <span className=\"Ubicacion\">\r\n                {`${ciudad}, ${pais} `}\r\n                <img src={`https://openweathermap.org/images/flags/${pais.toLowerCase()}.png`}></img>\r\n            </span>\r\n            <div className=\"temperature\">\r\n              {Math.floor(temperatura)+\"째\"}C  Actual\r\n            </div>\r\n            <div className=\"temp_max_min\">\r\n              <span className=\"temp-max\">{Math.floor(tempMax)+\"째\"}C  Max</span>\r\n              <span className=\"temp-min\">{Math.floor(tempMin)+\"째\"}C  Min</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-right\">\r\n            <span><b>HUMEDAD</b><br/>{humidity}%</span>\r\n            <span><b>PRESION</b><br/>{pressure}hPa</span>\r\n            <span><b>AMANECER</b><br/>{sunrise.toLocaleTimeString()}</span>\r\n            <span><b>ATARDECER</b><br/>{sunset.toLocaleTimeString()}</span>\r\n          </div>\r\n      </div>\r\n    );\r\n}\r\n \r\nexport default Card;","import React from 'react'\r\nimport Card from './card';\r\n\r\nclass Ciudad extends React.Component {\r\n    constructor(props){\r\n      super(props)\r\n      this.state = {\r\n        data: {}\r\n      }\r\n    }\r\n    componentDidMount(){\r\n      fetch(`https://api.openweathermap.org/data/2.5/weather?id=${this.props.ciudad}&appid=3720db800d4ff27a883312ad29fa6dfc`)\r\n      .then(response => response.json()).then(resdata => {\r\n      this.setState({\r\n        data: resdata\r\n      })\r\n    })\r\n    }\r\n    \r\n    render(){\r\n      return (\r\n        <React.Fragment>\r\n         {\r\n           (Object.keys(this.state.data).length > 0) &&  <Card resultado={this.state.data} />\r\n         }\r\n        </React.Fragment>\r\n      )\r\n    }\r\n}\r\nexport default Ciudad","import React from 'react'\r\n\r\nfunction Footer(props){\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p>Pagina realizada con Tecnologias: </p>\r\n            <div className=\"contenedor-tecnologias\">\r\n                <i style={{color: \"rgb(242, 94, 49)\"}} className=\"fab fa-html5\"></i>\r\n                <i style={{color: \"rgb(44, 136, 234)\"}} className=\"fab fa-css3-alt\"></i>\r\n                <i style={{color: \"rgb(255, 216, 2)\"}} className=\"fab fa-js-square\"></i>\r\n                <i style={{color: \"rgb(20, 180, 242)\"}} className=\"fab fa-react\"></i>\r\n                <i style={{color: \"rgb(249, 70, 128)\"}} className=\"fab fa-sass\"></i>\r\n            </div>\r\n            <p>API Consumida</p>\r\n            <a target=\"_blank\" href=\"https://openweathermap.org/\">https://openweathermap.org/</a>\r\n        </footer>\r\n    );\r\n}\r\nexport default Footer","import './App.css';\nimport React from 'react';\nimport Buscador from './componentes/buscador';\nimport Ciudad from './componentes/ciudad'\nimport Card from './componentes/card';\nimport Footer from './componentes/footer';\n\n\ndocument.addEventListener(\"DOMContentLoaded\",()=>{\n  let cabecera = document.querySelector(\".cabecera\");\n  \n  window.addEventListener(\"scroll\",()=>{\n      let scroll_cabecera = cabecera.clientHeight;\n      let scroll_window = window.pageYOffset;\n      console.log(scroll_window)\n      let buscador = document.querySelector(\".formulario\");\n      if (scroll_window > scroll_cabecera){\n          buscador.classList.add(\"buscador-fixed\")\n      } else {\n          buscador.classList.remove(\"buscador-fixed\")\n      }\n  }) \n})\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      busqueda: '',\n      resultado: {},\n      geolocalizacion: {},\n      ciudades: [3469058,3646738,3871336,3530597]\n    }\n\n    this.handlerInput = this.handlerInput.bind(this)\n    this.handlerSubmit = this.handlerSubmit.bind(this)\n    navigator.geolocation.getCurrentPosition((position)=>{\n      const latitude = position.coords.latitude;\n      const longitude = position.coords.longitude; \n      fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=3720db800d4ff27a883312ad29fa6dfc`)\n    .then(response => response.json())\n    .then(data => this.setState({\n      geolocalizacion: data\n    }))\n    })\n  }\n  handlerInput(e){\n    this.setState({\n      busqueda: e.target.value\n    })\n  }\n  handlerSubmit(e){\n    e.preventDefault()\n    const busqueda = this.state.busqueda\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${busqueda}&appid=3720db800d4ff27a883312ad29fa6dfc`)\n    .then(response => response.json())\n    .then(data => {\n      if (data.cod == 200){\n        this.setState({\n          resultado: data\n        })\n        let card_scroll = document.querySelector(\".card-busqueda\")\n        window.scrollTo(0,(card_scroll.offsetTop - 100))\n        console.log(card_scroll.offsetTop)\n      } else {\n        let input = document.querySelector(\".input-buscador\")\n        input.value = '';\n        alert(\"NO SE ENCONTRO NINGUN RESULTADO\")\n      }\n      \n    })\n    \n  }\n  \n  render() {\n    \n    return (\n      <React.Fragment>\n        <header className=\"cabecera\">\n          <img src=\"https://res.cloudinary.com/dcea83ydd/image/upload/v1625633047/OpenWeather%20API/react_kg8j7u.png\"></img>\n          <h1>CLIMA ONLINE</h1>\n          <Buscador input={this.handlerInput} submit={this.handlerSubmit} />\n        </header>\n        <h1 className=\"titulo\">Tu Ubicacion Actual</h1>\n        <div style={{display: \"flex\",justifyContent: \"center\"}}>\n          {\n            (Object.keys(this.state.geolocalizacion).length != 0) && <Card resultado={this.state.geolocalizacion}/>\n          }\n        </div>\n        <h1 className=\"titulo\">Otras Ubicaciones</h1>\n        <div className=\"ciudades\">\n          {this.state.ciudades.map(ciudad => <Ciudad  key={ciudad} ciudad={ciudad}/>)}\n        </div>\n        <h1 className=\"titulo\">Tus Busquedas</h1>\n        <section>\n          {\n            (Object.keys(this.state.resultado).length != 0)? \n            <Card atributo=\"card-busqueda\" resultado={this.state.resultado} /> : <h3>No has realizado ninguna busqueda...</h3>\n          }\n        </section>\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}